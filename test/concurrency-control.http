# In the following requests the variables baseUrl, user and password are used.
# Their values are set here.
@baseUrl = http://localhost:4004
@user = adminuser
@password = abcd1234


### ------------------------------------------------------------------------
# Create a new author
# @name createNewAuthor
POST {{baseUrl}}/admin/Authors
Content-Type: application/json
Authorization: Basic {{user}}:{{password}}

{
  "name": "Initial Version"
}


### Assign the ID of the newly created author to the variable authorID
@authorID = {{createNewAuthor.response.body.$.ID}}



### Read the newly created user for editing a first time
GET {{baseUrl}}/admin/Authors({{authorID}})
Authorization: Basic {{user}}:{{password}}


### Assign the ID of the received ETag to the variable ETag1
@ETag1 = {{createNewAuthor.response.headers.ETag}}



### Read the newly created user for editing a second time
GET {{baseUrl}}/admin/Authors({{authorID}})
Authorization: Basic {{user}}:{{password}}


### Assign the ID of the received ETag to the variable ETag2
#   ETag1 and Etag2 match because no changes have been made yet.
@ETag2 = {{createNewAuthor.response.headers.ETag}}



### ------------------------------------------------------------------------
# Update the newly created author using ETag1 reveived 
# when the Author was first read.
# The update implicitly creates a new ETag value.
PUT {{baseUrl}}/admin/Authors({{authorID}})
If-Match: {{ETag1}}
Content-Type: application/json
Authorization: Basic {{user}}:{{password}}

{
  "name": "Update 1 of Initial Version"
}



### ------------------------------------------------------------------------
# Try another update using ETag2 reveived
# when the author was read for the second time.
# This will fail with a HTTP status code 412 Precondition Failed.
PUT {{baseUrl}}/admin/Authors({{authorID}})
If-Match: {{ETag2}}
Content-Type: application/json
Authorization: Basic {{user}}:{{password}}

{
  "name": "Update 2 of Initial Version"
}